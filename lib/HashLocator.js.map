{"version":3,"sources":["HashLocator.js"],"names":["Locator","Location","addEventListener","removeEventListener","getHash","addQuery","guid","PUSH","REPLACE","TRAVEL","HashLocator","getLocation","e","window","location","finishTransit","nextLocation","action","hash","toString","start","onLocationChange","stop","createHref","pathname","query","module","exports"],"mappings":";;4CAWY,Q,EAEa,W,EACC,Y,EAMd,U;;2DATA,Q,WAEa,W,WACC,Y,WAMd,U;;;;;;;;mDAPNA,O,EACAC,Q;;;QARFC,gB,YAAAA,gB;QACAC,mB,YAAAA,mB;QACAC,O,YAAAA,O;QACAC,Q,YAAAA,Q;QACAC,I,YAAAA,I;QAOAC,I,aAAAA,I;QACAC,O,aAAAA,O;QACAC,M,aAAAA,M;;QAQEC,W;;;;;;;;8BAQFC,W,wBAAYC,C,EAAG;;AAEX,mBAAO,IAAIX,QAAJ,CACHG,QAAQS,OAAOC,QAAf,CADG,EAEHL,MAFG,EAGHH,MAHG,EAIH,EAJG,CAAP;AAOH,S;;8BAQDS,a,0BAAcC,Y,EAAc;;AAExB,+BAAMD,aAAN,YAAoBC,YAApB;;AAEA,oBAAQA,aAAaC,MAArB;AACI,qBAAKV,IAAL,CAAW,KAAKC,OAAL;AACPK,2BAAOC,QAAP,CAAgBI,IAAhB,GAAuBF,aAAaG,QAAb,EAAvB;AACA;AAHR;AAMH,S;;8BAQDC,K,oBAAQ;AACJ,+BAAMA,KAAN;AACAlB,6BAAiBW,MAAjB,EAAyB,YAAzB,EAAuC,KAAKQ,gBAA5C;AACA,mBAAO,IAAP;AACH,S;;8BAQDC,I,mBAAO;AACHnB,gCAAoBU,MAApB,EAA4B,YAA5B,EAA0C,KAAKQ,gBAA/C;AACA,mBAAO,IAAP;AACH,S;;8BAUDE,U,uBAAWC,Q,EAAUC,K,EAAO;AACxB,mBAAO,MAAMpB,SAASmB,QAAT,EAAmBC,KAAnB,CAAb;AACH,S;;;MAtEqBzB,O;;AA0E1B0B,WAAOC,OAAP,GAAiBjB,WAAjB","file":"HashLocator.js","sourcesContent":["/**\n * @file HashLocator\n * @author leon(ludafa@outlook.com)\n */\n\nconst {\n    addEventListener,\n    removeEventListener,\n    getHash,\n    addQuery,\n    guid\n} = require('./util');\n\nconst Locator =  require('./Locator');\nconst Location =  require('./Location');\n\nconst {\n    PUSH,\n    REPLACE,\n    TRAVEL\n} = require('./action');\n\n/**\n * 基于 Hash 的定位器\n *\n * @extends Locator\n */\nclass HashLocator extends Locator {\n\n    /**\n     * 解析当前地址\n     *\n     * @protected\n     * @override\n     */\n    getLocation(e) {\n\n        return new Location(\n            getHash(window.location),\n            TRAVEL,\n            guid(),\n            ''\n        );\n\n    }\n\n    /**\n     * 完成转换\n     *\n     * @protected\n     * @param {Location} nextLocation 下一下地址\n     */\n    finishTransit(nextLocation) {\n\n        super.finishTransit(nextLocation);\n\n        switch (nextLocation.action) {\n            case PUSH: case REPLACE:\n                window.location.hash = nextLocation.toString();\n                return;\n        }\n\n    }\n\n    /**\n     * 开始监听\n     *\n     * @public\n     * @override\n     */\n    start() {\n        super.start();\n        addEventListener(window, 'hashchange', this.onLocationChange);\n        return this;\n    }\n\n    /**\n     * 停止监听\n     *\n     * @public\n     * @override\n     */\n    stop() {\n        removeEventListener(window, 'hashchange', this.onLocationChange);\n        return this;\n    }\n\n    /**\n     * 生成 href 地址\n     *\n     * @public\n     * @param {string}  pathname pathname\n     * @param {?Object} query    query\n     * @return {string}\n     */\n    createHref(pathname, query) {\n        return '#' + addQuery(pathname, query);\n    }\n\n}\n\nmodule.exports = HashLocator;\n"],"sourceRoot":"/source/"}