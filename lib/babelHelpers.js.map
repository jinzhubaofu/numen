{"version":3,"sources":["util.js"],"names":["exports","addEventListener","target","eventName","handler","attachEvent","removeEventListener","detachEvent","toQueryString","query","Object","keys","reduce","items","name","value","item","Array","isArray","map","v","concat","result","push","encodeURIComponent","join","pasreHref","href","indexOf","originHref","hashIndex","hash","slice","searchIndex","search","querystring","parseQueryString","pathname","addQuery","location","nextQuery","currentQuery","key","currentQueryValue","nextQuerystring","guid","length","Math","random","toString","substr","split","term","index","decodeURIComponent","currentValue","getHash","HTTP_PREFIX_REGEXP","normalize","path","match","exec","charAt"],"mappings":"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","file":"babelHelpers.js","sourcesContent":["/**\n * @file util\n * @author leon(ludafa@outlook.com)\n */\n\n/**\n * 添加事件监听\n *\n * @param {Element} target    目标\n * @param {string} eventName 事件名\n * @param {Function} handler   回调函数\n */\nexports.addEventListener = function addEventListener(target, eventName, handler) {\n\n    if (target.addEventListener) {\n        target.addEventListener(eventName, handler);\n        return;\n    }\n\n    target.attachEvent('on' + eventName, handler);\n\n};\n\n/**\n * 移除事件监听\n *\n * @param {Element} target    目标\n * @param {string} eventName 事件名\n * @param {Function} handler   回调函数\n */\nexports.removeEventListener = function removeEventListener(target, eventName, handler) {\n\n    if (target.removeEventListener) {\n        target.removeEventListener(eventName, handler);\n        return;\n    }\n\n    target.detachEvent('on' + eventName, handler);\n};\n\n/**\n * 把一个 Object 转化为 querystring\n *\n * @param  {Object} query query\n * @return {string}\n */\nfunction toQueryString(query) {\n\n    if (!query) {\n        return '';\n    }\n\n    return Object\n        .keys(query)\n        // 打平结构\n        .reduce(function (items, name) {\n\n            const value = query[name];\n            const item = Array.isArray(value)\n                ? value.map(function (v) {\n                    return {\n                        name,\n                        value: v\n                    };\n                })\n                : {name, value};\n\n            return items.concat(item);\n\n        }, [])\n        // 过滤掉无效项\n        .reduce(function (result, {name, value}) {\n            if (value != null) {\n                result.push(`${encodeURIComponent(name)}=${encodeURIComponent(value)}`);\n            }\n            return result;\n        }, [])\n        // 拼接在一起\n        .join('&');\n\n}\n\nexports.toQueryString = toQueryString;\n\n/**\n * 解析 href\n *\n * @param  {string} href href\n * @return {Object}\n */\nfunction pasreHref(href) {\n\n    // 保证href是以 / 开头的，并不接受相对路径。。。\n    href = (href.indexOf('/') === 0 ? '' : '/') + href;\n\n    let originHref = href;\n    let hashIndex = href.indexOf('#');\n    let hash = '';\n\n    if (hashIndex !== -1) {\n        hash = href.slice(hashIndex);\n        href = href.slice(0, hashIndex);\n    }\n\n    let searchIndex = href.indexOf('?');\n    let search = '';\n    let querystring = '';\n    let query = {};\n\n    if (searchIndex !== -1) {\n        search = href.slice(searchIndex);\n        querystring = search.slice(1);\n        query = querystring ? parseQueryString(querystring) : {};\n        href = href.slice(0, searchIndex);\n    }\n\n    let pathname = href;\n\n    return {\n        href: originHref,\n        pathname, search, hash, query, querystring\n    };\n\n}\n\nexports.pasreHref = pasreHref;\n\n/**\n * 在一个 href 上添加额外的 query 参数\n *\n * @param {string} href  href\n * @param {Object} query query\n * @return {string}\n */\nexports.addQuery = function addQuery(href, query) {\n\n    const location = pasreHref(href);\n\n    const nextQuery = Object\n        .keys(query)\n        .reduce(\n            function (currentQuery, key) {\n\n                const value = query[key];\n                const currentQueryValue = currentQuery[key];\n\n                if (Array.isArray(currentQueryValue)) {\n                    currentQuery[key] = currentQueryValue.concat(value);\n                }\n                else if (currentQuery[key] != null) {\n                    currentQuery[key] = [currentQueryValue].concat(value);\n                }\n                else {\n                    currentQuery[key] = value;\n                }\n\n                return currentQuery;\n\n            },\n            location.query\n        );\n\n    const nextQuerystring = toQueryString(nextQuery);\n\n    return nextQuerystring\n        ? `${location.pathname}?${nextQuerystring}`\n        : location.pathname;\n\n};\n\n/**\n * 随机的唯一id\n *\n * @param  {number} length 长度\n * @return {string}\n */\nexports.guid = function guid(length = 8) {\n    return Math.random().toString(36).substr(2, length);\n};\n\n/**\n * 解析 querystring\n *\n * @param  {string} querystring querystring\n * @return {Object}\n */\nfunction parseQueryString(querystring) {\n\n    if (!querystring) {\n        return {};\n    }\n\n    return querystring\n        .split('&')\n        .reduce(function (query, term) {\n\n            const index = term.indexOf('=');\n\n            let name = decodeURIComponent(term.slice(0, index));\n            let value = decodeURIComponent(term.slice(index + 1));\n\n            if (!name) {\n                return query;\n            }\n\n            let currentValue = query[name];\n\n            if (Array.isArray(currentValue)) {\n                currentValue.push(value);\n            }\n            else if (currentValue) {\n                query[name] = [currentValue, value];\n            }\n            else {\n                query[name] = value;\n            }\n\n            return query;\n\n        }, {});\n\n}\n\nexports.parseQueryString = parseQueryString;\n\n/**\n * 获取当前 href 中的 hash\n *\n * @param  {module:Location} location 目标\n * @return {string}\n */\nexports.getHash = function getHash(location) {\n    let href = location.href;\n    let index = href.indexOf('#');\n    return index === -1 ? '' : href.slice(index + 1);\n};\n\nconst HTTP_PREFIX_REGEXP = /^(https?:\\/\\/[^\\/]*)/;\n\n/**\n * 规范化 href\n *\n * 去掉 protocol://host:port 部分，并且保证 pathname 部分至少有一个 '/'\n *\n * @param  {string} path path\n * @return {string}\n */\nexports.normalize = function normalize(path) {\n\n    let match = HTTP_PREFIX_REGEXP.exec(path);\n\n    if (match) {\n        path = path.slice(match[1].length);\n    }\n\n    if (path.charAt(0) !== '/') {\n        path = '/' + path;\n    }\n\n    return path;\n\n};\n"],"sourceRoot":"/source/"}